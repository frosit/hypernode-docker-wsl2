#!/usr/bin/env bash
#######################################
# hypernode-docker WSL Tools - Fabio Ros
# =====================================
# DESCRIPTION:
# Sourcing this file will enable specific functionality for the hn docker setup.
# It will add and make changes to the environment to adjust it to our case without harming the environment.
#
# USAGE: source this file in .profile/.bash_profile/.bashrc.
#
# EXAMPLE: if [[ -d "/data/web/.wsl" ]]; then source "/data/web/.wsl/.wsl"; fi
#
# TO DO:
# * better logging
# * handling services + versions (php)
# * allow to run with user preferences (zsh as default, default php/mods, use mysql from hypernode or custom containers etc)
#######################################

#######################################
# Set generic variables
#######################################
# export HNWSL_LOG=true
# export HNWSL_DEBUG=true

#######################################
# Load HNWSL
#######################################
export HNWSL_HOME=/data/web # Define home for root @todo modify all $HNWSL_HOME to $HNWSL_HOME
export HNWSL_SRC=$HNWSL_HOME/.wsl # Set our home, also allows to detect whether hnwsl has loaded
export HNWSL_DEBUG=${HNWSL_DEBUG:-true} # can be overriden in main .env

export HNWSL_LOG=${HNWSL_LOG:-true} # can be overriden in main .env
export HNWSL_LOG_FILE=${HNWSL_HOME}/.hnwsl.log

# export HNWSL_SSH_AUTH_SOCK=${HNWSL_SSH_AUTH_SOCK} # can be overridden in main .env

set -a
[ -f ${HNWSL_SRC}/.env ] && . ${HNWSL_SRC}/.env
set +a

#######################################
# Loads global functions from lib, like debug functions
# after this, functions like hnwsl::log are available
if [ -d $HNWSL_HOME/.wsl/lib ]; then
    for item in $(ls $HNWSL_HOME/.wsl/lib ); do
        . $HNWSL_HOME/.wsl/lib/${item}
    done
else
    echo -e "ERROR: HNWSL lib could not be loaded!"
fi


# add HNWSL bin directory to path
if [ -d "$HNWSL_HOME/.wsl/bin" ] ; then
    PATH="$PATH:$HNWSL_HOME/.wsl/bin"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# set path to windows home
if [[ ! -z ${HNWSL_WIN_USERDIR+x} ]]; then
    hnwsl::setwinhome
fi

# forward ssh auth sock
if [[ ${HNWSL_SSH_AUTH_SOCK} == true ]]; then
  export SSH_AUTH_SOCK=$HOME/.ssh/agent.sock
  ss -a | grep -q $SSH_AUTH_SOCK
  if [ $? -ne 0   ]; then
  hnwsl::log "starting ssh integration"
      rm -f $SSH_AUTH_SOCK
      ( setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork & ) >/dev/null 2>&1
  fi
fi